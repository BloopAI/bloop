name: Tauri Release

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/tauri-release.yml"
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-sign-tauri:
    strategy:
      fail-fast: false
      matrix:
        target:
          [x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin]

        include:
          - target: x86_64-unknown-linux-gnu
            name: ubuntu-20.04

          - target: x86_64-apple-darwin
            name: macos-11

          - target: aarch64-apple-darwin
            name: macos-11


    runs-on: ${{ matrix.name }}
    env:
      ORT_LIB_LOCATION: ${{ github.workspace }}/lib/${{ matrix.target }}/onnxruntime

    steps:
      - if: matrix.name == 'ubuntu-20.04'
        uses: pierotofy/set-swap-space@v1.0
        with:
          swap-size-gb: 10

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create LFS file list
        run: git lfs ls-files --long | cut -d ' ' -f1 | sort > .lfs-assets-id

      - name: LFS Cache
        uses: actions/cache@v3
        with:
          path: .git/lfs/objects
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: git lfs install && git lfs pull

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install app dependencies
        run: npm ci

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.73.0
          target: ${{ matrix.target }}

      - name: Check if keys exist
        env:
          analytics_key: ${{ secrets.ANALYTICS_BE_WRITE_KEY_PROD }}
          analytics_fe_key: ${{ secrets.ANALYTICS_FE_WRITE_KEY_PROD }}
          sentry_dsn: ${{ secrets.SENTRY_DSN_BE }}
          sentry_dsn_fe: ${{ secrets.SENTRY_DSN_FE }}
        if: ${{ env.analytics_fe_key == '' || env.sentry_dsn_fe == '' || env.analytics_key == '' || env.sentry_dsn == ''}}
        run: exit 1

      - name: Set environment
        run: echo "{\"analytics_key\":\"${{ secrets.ANALYTICS_BE_WRITE_KEY_PROD }}\",\"analytics_data_plane\":\"${{ secrets.ANALYTICS_DATA_PLANE_URL }}\",\"sentry_dsn_fe\":\"${{ secrets.SENTRY_DSN_FE }}\",\"sentry_dsn\":\"${{ secrets.SENTRY_DSN_BE }}\",\"analytics_key_fe\":\"${{ secrets.ANALYTICS_FE_WRITE_KEY_PROD }}\",\"answer_api_url\":\"${{ secrets.ANSWER_API_URL }}\",\"cognito_userpool_id\":\"${{ secrets.COGNITO_USERPOOL_ID }}\",\"cognito_client_id\":\"${{ secrets.COGNITO_CLIENT_ID }}\",\"cognito_auth_url\":\"${{ secrets.COGNITO_AUTH_URL }}\",\"cognito_mgmt_url\":\"${{ secrets.COGNITO_MGMT_URL }}\",\"cognito_config_url\":\"${{ secrets.COGNITO_CONFIG_URL }}\"}" > apps/desktop/src-tauri/config/config.json

      - name: Check environment is set
        run: du -h apps/desktop/src-tauri/config/config.json

      - name: Set providerShortName in tauri.conf.json
        uses: jossef/action-set-json-field@v2.1
        with:
          file: apps/desktop/src-tauri/tauri.conf.json
          field: tauri.bundle.macOS.providerShortName
          value: ${{ secrets.MAC_PROVIDER_SHORT_NAME }}

      - name: Set signingIdentity in tauri.conf.json
        uses: jossef/action-set-json-field@v2.1
        with:
          file: apps/desktop/src-tauri/tauri.conf.json
          field: tauri.bundle.macOS.signingIdentity
          value: ${{ secrets.APPLE_SIGNING_IDENTITY }}

      - name: Create Signing API Key
        if: matrix.name == 'macos-11'
        run: echo "${{ secrets.APPLE_API_KEY_CONTENT }}" > apiKey.p8

      - name: Remove onnxruntime from aarch64-apple-darwin builds
        if: matrix.target == 'aarch64-apple-darwin'
        uses: jossef/action-set-json-field@v2.1
        with:
          file: apps/desktop/src-tauri/tauri.conf.json
          field: tauri.bundle.macOS.frameworks
          value: '[]'
          parse_json: true

      - name: get release version
        id: release-version
        run: echo "RELEASE_VERSION=$(cat apps/desktop/src-tauri/tauri.conf.json | jq '.package.version' | tr -d '"')" >> "$GITHUB_OUTPUT"

      - uses: tauri-apps/tauri-action@cb58ba3f65bd456ee564376585a8400bf0b71f47
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          ORT_LIB_LOCATION: ${{ github.workspace }}/lib/${{ matrix.target }}/onnxruntime
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          APPLE_API_KEY_PATH: /Users/runner/work/bloop/bloop/apiKey.p8
          TAURI_BIN_PATH: apps/desktop/src-tauri/bin
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_RELEASE_VERSION: ${{ steps.release-version.outputs.RELEASE_VERSION }}
        with:
          args: -- --target "${{ matrix.target }}" -v

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-app
          path: target/${{ matrix.target }}/release/bundle
          retention-days: 5

      - name: Setup Sentry CLI
        uses: mathieu-bour/setup-sentry-cli@v1.3.0
        with:
          token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          organization: ${{ secrets.SENTRY_ORG }}
          project: ${{ secrets.SENTRY_PROJECT }}
          version: 2.21.2

      - name: Create Sentry release
        run: |
          sentry-cli releases new "${{ steps.release-version.outputs.RELEASE_VERSION }}"
          sentry-cli releases set-commits "${{ steps.release-version.outputs.RELEASE_VERSION }}" --auto

      - name: (MacOS) Upload source maps to Sentry
        if: matrix.name == 'macos-11'
        run: |
          sentry-cli debug-files upload \
          --log-level debug \
          --include-sources \
          target/${{ matrix.target }}/release/bloop.dSYM

      - name: Rename tar.gz in macos
        if: matrix.name == 'macos-11'
        run: |
          new_filename="bloop_${{ steps.release-version.outputs.RELEASE_VERSION }}_$(echo ${{ matrix.target }} | cut -d '-' -f 1).app.tar.gz"
          mv "target/${{ matrix.target }}/release/bundle/macos/bloop.app.tar.gz" "target/${{ matrix.target }}/release/bundle/macos/${new_filename}"

      - name: List files
        run: ls -R target/${{ matrix.target }}/release/bundle

      - name: Generate Changelog
        run: |
          release_version="${{ steps.release-version.outputs.RELEASE_VERSION }}"
          sed "s/VERSION/${release_version}/g" release_description_template.txt > new_description.txt
          cat new_description.txt

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            target/${{ matrix.target }}/release/bundle/deb/*.deb
            target/${{ matrix.target }}/release/bundle/appimage/*.AppImage
            target/${{ matrix.target }}/release/bundle/appimage/*.tar.gz
            target/${{ matrix.target }}/release/bundle/dmg/*.dmg
            target/${{ matrix.target }}/release/bundle/macos/*.tar.gz
