apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bloop.fullname" . }}
  labels:
    {{- include "bloop.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bloop.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "bloop.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bloop.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-app
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /bleep
          args:
          - --host=0.0.0.0
          - --index-dir=/data
          - --model-dir=/model
          - --frontend-dist=/frontend
          - --answer-api-url={{ .Values.bloop.answerApiUrl }}
          - --instance-domain={{ .Values.bloop.instanceDomain }}
          - --github-app-install-id={{ .Values.bloop.githubAppId }}
          - --github-client-id={{ .Values.bloop.githubClientId }}
          - --github-client-secret={{ .Values.bloop.githubClientSecret }}
          - --github-app-private-key=/bloop/app-private-key.pem
          env:
          {{ if .Values.env }}
          {{ range .Values.env }}
          -
          {{- . | toYaml | nindent 12 -}}
          {{ end }}
          {{ end }}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "bloop.fullname" . }}-storage
            mountPath: /data
        - name: {{ .Chart.Name }}-qdrant
          image: "{{ .Values.qdrant.image.repository }}:{{ .Values.qdrant.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.qdrant.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: ["./config/initialize.sh"]
          ports:
          {{- range .Values.qdrant.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
          {{- end }}

          {{- $values := .Values.qdrant -}}
          {{- range .Values.qdrant.service.ports }}
          {{- if and $values.livenessProbe.enabled .checksEnabled }}
          livenessProbe:
            {{- if eq .name "grpc"}}
            grpc:
              port: {{ .targetPort }}
            {{- end }}
            {{- if eq .name "rest"}}
            httpGet:
              path: /
              port: {{ .targetPort }}
            {{- end }}
            initialDelaySeconds: {{ $values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ $values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ $values.livenessProbe.periodSeconds }}
            successThreshold: {{ $values.livenessProbe.successThreshold }}
            failureThreshold: {{ $values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if and $values.readinessProbe.enabled .checksEnabled }}
          readinessProbe:
            {{- if eq .name "grpc"}}
            grpc:
              port: {{ .targetPort }}
            {{- end }}
            {{- if eq .name "rest"}}
            httpGet:
              path: /
              port: {{ .targetPort }}
            {{- end }}
            initialDelaySeconds: {{ $values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ $values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ $values.readinessProbe.periodSeconds }}
            successThreshold: {{ $values.readinessProbe.successThreshold }}
            failureThreshold: {{ $values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.qdrant.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "qdrant.fullname" . }}-storage
            mountPath: /qdrant/storage
          - name: qdrant-config
            mountPath: /qdrant/config/initialize.sh
            subPath: initialize.sh
          - name: qdrant-config
            mountPath: /qdrant/config/production.yaml
            subPath: production.yaml
          {{- if .Values.qdrant.snapshotRestoration.enabled }}
          - name: qdrant-snapshots
            mountPath: /qdrant/snapshots
          {{- end }}
      {{- with .Values.qdrant.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.qdrant.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.qdrant.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: qdrant-config
          configMap:
            name: {{ include "qdrant.fullname" . }}
            defaultMode: 0755
        - name: {{ include "bloop.fullname" . }}-storage
          persistentVolumeClaim:
            claimName: {{ include "bloop.fullname" . }}-storage
        - name: {{ include "qdrant.fullname" . }}-storage
          persistentVolumeClaim:
            claimName: {{ include "qdrant.fullname" . }}-storage
        {{- if .Values.qdrant.snapshotRestoration.enabled }}
        - name: qdrant-snapshots
          persistentVolumeClaim:
            claimName: {{ .Values.qdrant.snapshotRestoration.pvcName }}
        {{- end }}
