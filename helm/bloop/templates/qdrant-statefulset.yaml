apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "qdrant.fullname" . }}
  annotations:
    configmap.reloader.stakater.com/reload: "{{ include "qdrant.fullname" . }}"
  labels:
    {{- include "qdrant.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "qdrant.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "qdrant.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "qdrant.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        {{ if .Values.qdrant.backup.enabled }}
        - name: {{ .Chart.Name }}-qdrant-backup
          image: amazon/aws-cli:2.11.15
          imagePullPolicy: {{ .Values.qdrant.image.pullPolicy }}
          command:
          - /bin/sh
          args:
          - /bloop/backup-script.sh
          env:
          - name: AWS_REGION
            value: {{ .Values.qdrant.backup.awsDefaultRegion }}
          - name: GITHUB_ORG
            value: {{ .Values.bloop.githubOrgName }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "qdrant.fullname" . }}-backup
                key: aws-access-key-id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "qdrant.fullname" . }}-backup
                key: aws-secret-access-key
          volumeMounts:
          - name: {{ include "qdrant.fullname" . }}-storage
            mountPath: /qdrant/storage
          {{- if .Values.qdrant.backup.enabled }}
          - mountPath: /bloop
            name: {{ include "qdrant.fullname" . }}-backup-script
            readOnly: true
          {{- end }}
        {{ end }}
        - name: {{ .Chart.Name }}-qdrant
          image: "{{ .Values.qdrant.image.repository }}:{{ .Values.qdrant.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.qdrant.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args: ["./config/initialize.sh"]
          ports:
          {{- range .Values.qdrant.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
          {{- end }}

          {{- $values := .Values.qdrant -}}
          {{- range .Values.qdrant.service.ports }}
          {{- if and $values.livenessProbe.enabled .checksEnabled }}
          livenessProbe:
            {{- if eq .name "grpc"}}
            grpc:
              port: {{ .targetPort }}
            {{- end }}
            {{- if eq .name "rest"}}
            httpGet:
              path: /
              port: {{ .targetPort }}
            {{- end }}
            initialDelaySeconds: {{ $values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ $values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ $values.livenessProbe.periodSeconds }}
            successThreshold: {{ $values.livenessProbe.successThreshold }}
            failureThreshold: {{ $values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if and $values.readinessProbe.enabled .checksEnabled }}
          readinessProbe:
            {{- if eq .name "grpc"}}
            grpc:
              port: {{ .targetPort }}
            {{- end }}
            {{- if eq .name "rest"}}
            httpGet:
              path: /
              port: {{ .targetPort }}
            {{- end }}
            initialDelaySeconds: {{ $values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ $values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ $values.readinessProbe.periodSeconds }}
            successThreshold: {{ $values.readinessProbe.successThreshold }}
            failureThreshold: {{ $values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.qdrant.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "qdrant.fullname" . }}-storage
            mountPath: /qdrant/storage
          - name: qdrant-config
            mountPath: /qdrant/config/initialize.sh
            subPath: initialize.sh
          - name: qdrant-config
            mountPath: /qdrant/config/production.yaml
            subPath: production.yaml
          {{- if .Values.qdrant.snapshotRestoration.enabled }}
          - name: qdrant-snapshots
            mountPath: {{ .Values.qdrant.snapshot.path }}
          {{- end }}

      {{- with .Values.qdrant.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.qdrant.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.qdrant.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: qdrant-config
          configMap:
            name: {{ include "qdrant.fullname" . }}
            defaultMode: 0755
        - name: {{ include "qdrant.fullname" . }}-storage
          persistentVolumeClaim:
            claimName: {{ include "qdrant.fullname" . }}-storage
        {{- if .Values.qdrant.snapshotRestoration.enabled }}
        - name: qdrant-snapshots
          persistentVolumeClaim:
            claimName: {{ .Values.qdrant.snapshotRestoration.pvcName }}
        {{- end }}
        {{- if .Values.qdrant.backup.enabled }}
        - name: {{ include "qdrant.fullname" . }}-backup-script
          configMap:
            name: {{ include "qdrant.fullname" . }}-backup-script
        {{- end }}
